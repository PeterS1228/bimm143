---
title: "RNA-Seq Mini Project"
author: "Peter Shamasha (A15857589)"
format: pdf
---

## Pathway Analysis from RNA-Seq Results

Steps for today: 

- Read (i) countdata and (ii) coldata files
- check formats
- setup and run DESeq
- Annotate results
- save results as a csv file
- Visualize results
- Run pathway analysis


## 1. Read Files
```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

colData = read.csv(metaFile, row.names=1)
countData = read.csv(countFile, row.names=1)
```

```{r}
head(colData)
```


```{r}
head(countData)
```

## 2. Checking and fixing the format

To remove the first column I can use the -1 trick for the columns
```{r}
countData <- as.matrix(countData[,-1])
head(countData)
```

```{r}
zerocounts <- rowSums(countData) == 0
head(zerocounts)
```

```{r}
newcounts <- countData[!zerocounts, ]
head(newcounts)
```

```{r}
nrow(newcounts)
```

## 3. Setup and Run DESeq

```{r}
#l message: false
library(DESeq2)
```


```{r}
dds <-  DESeqDataSetFromMatrix(countData=newcounts,
                             colData=colData,
                             design=~condition)
```
```{r}
dds <- DESeq(dds)
```

```{r}
res <- results(dds)
head(res)
```

## 4. Annotate results

I need to add annotation to my results including gene symbols and entrezids etc. For this I will use the **AnnotationDbi** package

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)
```

```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)

```


## 5. Save as a csv file

```{r}
write.csv(res, file = "myresults.csv")
```


## 6. Visualize results

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


## 7. Pathway Analysis

Focus in on the signaling pathways
```{r}
#l message: false
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)

attributes(keggres)
```

```{r}
# Look at the first three down (less) pathways
head(keggres$less, 3)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![Cell Cycle pathway from KEGG with our genes shown in color](hsa04110.pathview.png)










